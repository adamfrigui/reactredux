{"version":3,"sources":["redux/TodoSlice.js","components/AddTask.js","components/Task.js","components/ListTask.js","App.js","redux/store.js","index.js"],"names":["TodoSlice","createSlice","name","initialState","todoList","reducers","saveTodo","state","action","push","payload","setCheck","map","item","id","completed","deleteTodo","filter","todo","actions","SelectTodoList","todos","AddTask","useState","value","setValue","dispatch","useDispatch","onSubmit","event","preventDefault","console","log","title","Date","now","type","placeholder","onChange","target","Task","checked","onClick","e","ListTask","useSelector","style","listStyleType","App","className","store","configureStore","reducer","TodoReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAOMA,EAAYC,YAAY,CAC1BC,KAAM,QACNC,aANiB,CACjBC,SAAU,IAMVC,SAAU,CACLC,SAAU,SAACC,EAAMC,GACbD,EAAMH,SAASK,KAAKD,EAAOE,UAE/BC,SAAU,SAACJ,EAAQC,GAChBD,EAAMH,SAASQ,KAAI,SAAAC,GACZL,EAAOE,UAAYG,EAAKC,MACA,IAAnBD,EAAKE,UACLF,EAAKE,WAAY,EAGjBF,EAAKE,WAAY,OAKhCC,WAAa,SAACT,EAAQC,GACpB,OAAOD,EAAMH,SAASa,QAAO,SAACC,GAAD,OAAUA,EAAKJ,KAAON,EAAOE,QAAQI,UAMtE,EAAyCd,EAAUmB,QAA5Cb,EAAP,EAAOA,SAAWK,EAAlB,EAAkBA,SAASK,EAA3B,EAA2BA,WAErBI,EAAiB,SAACb,GAAD,OAAWA,EAAMc,MAAMjB,UAEtCJ,IAAf,Q,OCIesB,EArCC,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,cAiBjB,OAEC,uBAAMC,SARU,SAACC,GACjBA,EAAMC,iBAVLC,QAAQC,IAAR,iBAAsBR,IAEtBE,EAASpB,EAAS,CACnB2B,MAAOT,EACPT,WAAY,EACZD,GAAIoB,KAAKC,SAOTV,EAAS,KAKT,UAEC,uBACCW,KAAK,OACLC,YAAY,cACZb,MAAOA,EACPc,SAAU,SAACT,GAAD,OAAWJ,EAASI,EAAMU,OAAOf,UAG5C,wBAAQY,KAAK,SAAb,wBCPYI,EAvBF,SAAC,GAA6B,IAA3B1B,EAA0B,EAA1BA,GAAGmB,EAAuB,EAAvBA,MAAOlB,EAAgB,EAAhBA,UAChBW,EAAWC,cASb,OACN,6BACC,gCACC,iCACC,uBAAOS,KAAK,WAAWK,QAAS1B,EAAWuB,SAXxB,WAChBZ,EAASf,EAASG,OAWpBmB,KAEF,wBAAQS,QAXa,SAACC,GACpBjB,EAASV,EAAW,CAACF,GAAKA,MAU5B,0BCJW8B,EAZE,WAEb,IAAMvB,EAAQwB,YAAYzB,GAC7B,OACC,oBAAI0B,MAAO,CAACC,cAAe,QAA3B,SACE1B,EAAMT,KAAI,SAACM,GAAD,OACV,cAAC,EAAD,CAAMJ,GAAII,EAAKJ,GAAImB,MAAOf,EAAKe,MAAOlB,UAAWG,EAAKH,kB,MCM3CiC,MAXf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCDSC,EANDC,YAAe,CACzBC,QAAQ,CACJ/B,MAAQgC,KCEhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACC,cAAC,EAAD,QAGFO,SAASC,eAAe,W","file":"static/js/main.8ea7a63b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialState = {\r\n    todoList :[]\r\n}\r\n\r\nconst TodoSlice = createSlice({\r\n    name: 'todos',\r\n    initialState,\r\n    reducers: {\r\n         saveTodo: (state,action) =>{\r\n             state.todoList.push(action.payload)\r\n         },\r\n         setCheck: (state , action) => {\r\n            state.todoList.map(item => {\r\n                if(action.payload === item.id){\r\n                    if (item.completed === true) {\r\n                        item.completed = false\r\n                    }\r\n                    else{\r\n                        item.completed = true\r\n                    }\r\n                }\r\n            })\r\n         },\r\n         deleteTodo : (state , action) => {\r\n           return state.todoList.filter((todo) => todo.id !== action.payload.id)\r\n         }\r\n\r\n    }\r\n});\r\n\r\nexport const {saveTodo , setCheck,deleteTodo} = TodoSlice.actions\r\n\r\nexport const SelectTodoList = (state) => state.todos.todoList\r\n\r\nexport default TodoSlice.reducer","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveTodo } from '../redux/TodoSlice';\r\n\r\nconst AddTask = () => {\r\n\tconst [value, setValue] = useState('');\r\n\tconst dispatch = useDispatch()\r\n\tconst addTodo = () => {\r\n\t  console.log(`adding ${value}`)\r\n\t  \r\n\t  dispatch(saveTodo({\r\n\t\ttitle: value,\r\n\t\tcompleted : false,\r\n\t\tid: Date.now()\r\n\t  }))\r\n\t}\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\taddTodo();\r\n\t\tsetValue(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='Add todo...'\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\r\n\t\t\t></input>\r\n\r\n\t\t\t<button type='submit'>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTask;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCheck, deleteTodo } from '../redux/TodoSlice';\r\n\r\nconst Task = ({ id,title, completed }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleCheck = () => {\r\n        dispatch(setCheck(id))\r\n    }\r\n    const handleDelete = (e) => {\r\n      dispatch(deleteTodo({id : id}))\r\n    }\r\n\r\n        return (\r\n\t\t<li>\r\n\t\t\t<div >\r\n\t\t\t\t<span >\r\n\t\t\t\t\t<input type='checkbox' checked={completed} onChange={handleCheck}></input>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</span>\r\n\t\t\t\t<button onClick={handleDelete}>Delete</button>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task';\r\nimport { useSelector } from 'react-redux';\r\nimport { SelectTodoList } from '../redux/TodoSlice';\r\n\r\nconst ListTask = () => {\r\n\r\n    const todos = useSelector(SelectTodoList);\r\n\treturn (\r\n\t\t<ul style={{listStyleType :'none'}}>\r\n\t\t\t{todos.map((todo) => (\r\n\t\t\t\t<Task id={todo.id} title={todo.title} completed={todo.completed} />\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ListTask;","import AddTask from './components/AddTask';\nimport ListTask from './components/ListTask';\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>my todoList</h2>\n      <AddTask/>\n      <ListTask/>\n  \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport TodoReducer from \"./TodoSlice\";\r\n \r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        todos : TodoReducer\r\n    }\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store} >\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}